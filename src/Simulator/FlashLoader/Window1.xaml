<Window x:Class="FlashLoader.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlashLoader" WindowStyle="None" AllowsTransparency="True" ResizeMode="NoResize"
        mc:Ignorable="d"
        Title="Window1" Height="544" Width="871" Background="{x:Null}">
    <Window.Resources>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="False" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFD0F0FF"/>
            <Setter Property="Background" Value="#FF02A2EC"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="Transparent" BorderThickness="0" Background="#0002A2EC" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="Transparent" BorderThickness="0" Background="#0002A2EC" Margin="0" Opacity="0"/>
                            </Border>
                            <Grid HorizontalAlignment="Left" Margin="2,1,0,0" Width="20">
                                <Ellipse Height="16" Width="16" Fill="White" Opacity="0.5" HorizontalAlignment="Center" VerticalAlignment="Center"></Ellipse>
                                <Ellipse x:Name="centerellipse" Height="8" Width="8" Fill="White" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"></Ellipse>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="Left" Margin="30,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>


                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>


                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Opacity" Value="0.8" TargetName="centerellipse"></Setter>

                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="helptab" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#FFD0F0FF"/>
            <Setter Property="Background" Value="#FF02A2EC"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                            <Border x:Name="mainBorder" BorderBrush="Transparent" BorderThickness="0" Background="#0002A2EC" Margin="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                <Border x:Name="innerBorder" BorderBrush="Transparent" BorderThickness="0" Background="#0002A2EC" Margin="0" Opacity="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                            </Border>
                            <Grid HorizontalAlignment="Left" Margin="2,1,0,0" UseLayoutRounding="True" Width="20" d:DesignUseLayoutRounding="True">
                                <Ellipse Fill="Transparent" Stroke="White" Height="16" Opacity="0.8" UseLayoutRounding="True" Width="16" d:DesignUseLayoutRounding="True"/>
                                <TextBlock Foreground="White" Margin="0,-1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">?</TextBlock>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="Left" Margin="30,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" d:DesignUseLayoutRounding="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>

                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" Background="White"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusY="4.833" RadiusX="4.833"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5"  RadiusY="4.833" RadiusX="4.833">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="#FFCBD6E0" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="#FF02A2EC" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FFF1F7F9"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFF1F7F9"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FFE6EEF1"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFE6EEF1"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ManualCOntrolButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="100" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="50" Background="White">
        <Grid.Effect>
            <DropShadowEffect BlurRadius="50" Opacity="0.6" ShadowDepth="0" Color="#FF36465D"/>
        </Grid.Effect>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Background="#FF46A8D4" HorizontalAlignment="Left" Width="214"/>
        <TabControl x:Name="tab" Margin="32,51,0,0" BorderThickness="0" ClipToBounds="False" TabStripPlacement="Left" Style="{DynamicResource TabControlStyle1}">
            <TabItem x:Name="dashboard_tab" Header="Dashboard" ClipToBounds="False" Width="180" Height="35" Background="#FF0F1111" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="196,308,0,0" TextWrapping="Wrap" Text="RAM" VerticalAlignment="Top" Foreground="#FF4C6A87"/>
                    <TextBlock HorizontalAlignment="Left" Margin="28,184,0,0" TextWrapping="Wrap" Text="Core Temp" VerticalAlignment="Top" Foreground="#FF4C6A87"/>
                    <TextBlock HorizontalAlignment="Left" Margin="196,261,0,0" TextWrapping="Wrap" Text="FLASH" VerticalAlignment="Top" Foreground="#FF4C6A87"/>
                    <CheckBox Content="Use Simulator" HorizontalAlignment="Left" Margin="325,27,0,0" VerticalAlignment="Top" Foreground="#FF5B6C7C"/>
                    <CheckBox Content="Enable Manual Control" HorizontalAlignment="Left" Margin="325,52,0,0" VerticalAlignment="Top" BorderBrush="#FFCBD9E2" Foreground="#FF5B6C7C"/>
                    <Button Content="Soft Reset" BorderThickness="0" HorizontalAlignment="Left" Margin="435,249,0,0" VerticalAlignment="Top" Width="89" Height="30" Background="#FF5ABAE0" Foreground="White"/>
                    <Button Content="Hard Reset" BorderThickness="0" HorizontalAlignment="Left" Margin="435,289,0,0" VerticalAlignment="Top" Width="89" Height="29" Foreground="#FF4C6474"/>
                    <TextBlock HorizontalAlignment="Left" Margin="325,137,0,0" TextWrapping="Wrap" Text="Device:" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                    <TextBlock HorizontalAlignment="Left" Margin="24,38,0,0" TextWrapping="Wrap" Text="Device Name:" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                    <TextBlock HorizontalAlignment="Left" Margin="24,58,0,0" TextWrapping="Wrap" Text="Device ID:" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                    <TextBlock HorizontalAlignment="Left" Margin="24,78,0,0" TextWrapping="Wrap" Text="OS Version:" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                    <Button Content="Stop" BorderThickness="0" HorizontalAlignment="Left" Margin="435,328,0,0" VerticalAlignment="Top" Width="89" Height="30" Foreground="#FF4C6474"/>
                    <ProgressBar HorizontalAlignment="Left" Height="9" Margin="196,281,0,0" VerticalAlignment="Top" Width="193" Value="70">
                        <ProgressBar.BorderBrush>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="1,1">
                                <GradientStop Color="#FF2EC5FE" Offset="0"/>
                                <GradientStop Color="#FF07ACF0" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.BorderBrush>
                        <ProgressBar.Foreground>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="1,1">
                                <GradientStop Color="#FF2FC5FE"/>
                                <GradientStop Color="#FF06ACF0" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.Foreground>
                    </ProgressBar>
                    <ProgressBar HorizontalAlignment="Left" Height="9" Margin="196,328,0,0" VerticalAlignment="Top" Width="193" Value="30">
                        <ProgressBar.BorderBrush>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="1,1">
                                <GradientStop Color="#FF2EC5FE" Offset="0"/>
                                <GradientStop Color="#FF07ACF0" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.BorderBrush>
                        <ProgressBar.Foreground>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="1,1">
                                <GradientStop Color="#FF2FC5FE"/>
                                <GradientStop Color="#FF06ACF0" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.Foreground>
                    </ProgressBar>
                    <TextBlock x:Name="temp" HorizontalAlignment="Left" Margin="24,191,0,0" TextWrapping="Wrap" FontSize="55" Text="26" VerticalAlignment="Top" Foreground="#FF4C6A87" FontFamily="Segoe UI Light"/>
                    <TextBlock HorizontalAlignment="Left" Margin="28,287,0,0" TextWrapping="Wrap" Text="Core Speed" VerticalAlignment="Top" Foreground="#FF4C6A87"/>
                    <TextBlock HorizontalAlignment="Left" Margin="24,294,0,0" TextWrapping="Wrap" FontSize="55" Text="128" VerticalAlignment="Top" Foreground="#FF4C6A87" FontFamily="Segoe UI Light"/>
                    <TextBlock HorizontalAlignment="Left" Margin="105,336,0,0" TextWrapping="Wrap" FontSize="16" Text="MHz" VerticalAlignment="Top" Foreground="#FF4C6A87" FontFamily="Segoe UI Light"/>
                    <TextBlock HorizontalAlignment="Left" Margin="81,199,0,0" TextWrapping="Wrap" FontSize="16" Text="o" VerticalAlignment="Top" Foreground="#FF4C6A87" FontFamily="Segoe UI Light"/>
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="SMART CAT" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                    <TextBlock HorizontalAlignment="Left" Margin="111,-19,0,0" TextWrapping="Wrap" Text="v1.0" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="9" FontFamily="Segoe UI Semilight"/>
                    <TextBlock HorizontalAlignment="Left" Margin="378,137,0,0" TextWrapping="Wrap" Text="Connected" VerticalAlignment="Top" Foreground="#FF3FB9F1"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="project_tab" Header="Project" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="PROJECT" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                </Grid>
            </TabItem>
            <TabItem Header="Upload Program" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="UPLOAD PROGRAM" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                    <TextBlock HorizontalAlignment="Left" Margin="24,33,0,0" TextWrapping="Wrap" Text="File Location:  " VerticalAlignment="Top" Foreground="#FF2E4964"/>
                    <CheckBox Content="Automatic Upload" HorizontalAlignment="Left" Margin="24,129,0,0" VerticalAlignment="Top" BorderBrush="#FFCBD9E2" Foreground="#FF5B6C7C"/>
                    <CheckBox Content="Beep after Upload" HorizontalAlignment="Left" Margin="24,149,0,0" VerticalAlignment="Top" BorderBrush="#FFCBD9E2" Foreground="#FF5B6C7C"/>
                    <Button Content="Upload" HorizontalAlignment="Left" Margin="112,62,0,0" VerticalAlignment="Top" Width="75" Height="30" BorderBrush="{x:Null}" Foreground="#FF274259"/>
                    <Button Content="Browse" HorizontalAlignment="Left" Margin="24,62,0,0" VerticalAlignment="Top" Width="75" Height="30" BorderBrush="{x:Null}" Foreground="#FF274259"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="botconfig_tab" Header="Bot Config" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="ROBOT CONFIGURATION" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                    <ListBox Margin="0,10,0,0" BorderThickness="0">
                        <Border Height="149" Width="518" BorderThickness="0,0,0,1">
                            <Grid>
                                <TextBlock HorizontalAlignment="Left" Margin="20,10,0,0" TextWrapping="Wrap" Text="PID Controller" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <Slider HorizontalAlignment="Left" Margin="58,48,0,0" VerticalAlignment="Top" Width="331"/>
                                <TextBlock HorizontalAlignment="Left" Margin="20,50,0,0" TextWrapping="Wrap" Text="Kp" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <TextBlock HorizontalAlignment="Left" Margin="20,78,0,0" TextWrapping="Wrap" Text="Kd" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <Slider HorizontalAlignment="Left" Margin="58,76,0,0" VerticalAlignment="Top" Width="331"/>
                                <TextBlock HorizontalAlignment="Left" Margin="20,114,0,0" TextWrapping="Wrap" Text="Ki" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <Slider HorizontalAlignment="Left" Margin="58,112,0,0" VerticalAlignment="Top" Width="331"/>
                            </Grid>
                        </Border>
                        <Grid Height="114" Width="424">
                            <TextBox HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="23" Margin="162,41,0,0" TextWrapping="Wrap" Text="123" VerticalAlignment="Top" Width="120" Foreground="#FF728193" BorderBrush="#FFDEE5EA"/>
                            <TextBlock HorizontalAlignment="Left" Margin="20,45,0,0" TextWrapping="Wrap" Text="Proportional Constant" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                        </Grid>
                        <Border Height="149" Width="518" BorderThickness="0,0,0,1">
                            <Grid>
                                <TextBlock HorizontalAlignment="Left" Margin="20,10,0,0" TextWrapping="Wrap" Text="PID Controller" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <Slider HorizontalAlignment="Left" Margin="58,48,0,0" VerticalAlignment="Top" Width="331"/>
                                <TextBlock HorizontalAlignment="Left" Margin="20,50,0,0" TextWrapping="Wrap" Text="Kp" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <TextBlock HorizontalAlignment="Left" Margin="20,78,0,0" TextWrapping="Wrap" Text="Kd" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <Slider HorizontalAlignment="Left" Margin="58,76,0,0" VerticalAlignment="Top" Width="331"/>
                                <TextBlock HorizontalAlignment="Left" Margin="20,114,0,0" TextWrapping="Wrap" Text="Ki" VerticalAlignment="Top" Foreground="#FF6A859E"/>
                                <Slider HorizontalAlignment="Left" Margin="58,112,0,0" VerticalAlignment="Top" Width="331"/>
                            </Grid>
                        </Border>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem x:Name="watch_tab" Header="Live Watch" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="WATCH" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                    <Grid HorizontalAlignment="Left" Height="267" Margin="24,33,0,0" VerticalAlignment="Top" Width="435" Background="White">
                        <DataGrid HorizontalAlignment="Left" Height="267" VerticalAlignment="Top" Width="435" Background="White" BorderBrush="#FFE9EDF1"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="terminal_tab" Header="Terminal" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <ListBox Height="346" VerticalAlignment="Top" BorderThickness="0" Foreground="#FF537591" Margin="0,10,0,0">
                        <ListBoxItem Padding="5,0,0,0" Content="&gt;&gt; This is message from Smart Cat"/>
                        <ListBoxItem Padding="5,0,0,0" Content="&gt;&gt; Core Clock Updated&#x9;&#x9;&#x9;5ms"/>
                        <ListBoxItem Padding="5,0,0,0" Content="&gt;&gt; Available Flash Space 12Kb&#x9;&#x9;3ms"/>
                        <ListBoxItem Padding="5,0,0,0" Content="&gt;&gt; Cannot Detect Line&#x9;&#x9;&#x9;12ms"/>
                    </ListBox>
                    <Border Margin="0,356,0,0" BorderBrush="#FFE5ECF1" BorderThickness="0,1,0,0">
                        <Grid>
                            <TextBox VerticalContentAlignment="Center" Padding="10,0,0,0" Height="33" BorderThickness="0" TextWrapping="Wrap" Text="Enter Message to Send" VerticalAlignment="Top" Foreground="#FF4E6E83" BorderBrush="#FFE5ECF1" Margin="0,0,59,-1"/>
                            <Button Content="Send" HorizontalAlignment="Left" BorderThickness="0" Margin="494,-1,0,0" Width="59"/>
                        </Grid>
                    </Border>
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="TERMINAL" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                </Grid>
            </TabItem>

            <TabItem x:Name="simulator_tab" Header="Extensions" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="SIMULATOR" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="manualcontrol_tab" Header="Manual Control" Background="#FF02A2EC" Height="35" FontSize="11">
                <Grid Background="White">
                    <TextBlock HorizontalAlignment="Left" Margin="24,-26,0,0" TextWrapping="Wrap" Text="MANUAL CONTROL" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="16" FontFamily="Segoe UI Semilight"/>
                    <Grid Margin="122,56,119,41">
                        <Ellipse Fill="White" HorizontalAlignment="Left" Height="250" Margin="27,21,0,0" VerticalAlignment="Top" Width="250" Stroke="#FFDCE5E8" RenderTransformOrigin="0,0"/>
                        <TextBlock HorizontalAlignment="Left" Margin="0,137,0,0" TextWrapping="Wrap" Text="Left" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="12"/>
                        <TextBlock HorizontalAlignment="Left" Margin="130,0,0,0" TextWrapping="Wrap" Text="Forward" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="12"/>
                        <TextBlock HorizontalAlignment="Left" Margin="282,137,0,0" TextWrapping="Wrap" Text="Right" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="12"/>
                        <TextBlock HorizontalAlignment="Left" Margin="128,276,0,0" TextWrapping="Wrap" Text="Backward" VerticalAlignment="Top" Foreground="#FF6A859E" FontSize="12"/>
                        <Ellipse Fill="White" HorizontalAlignment="Left" Height="150" Margin="78,71,0,0" VerticalAlignment="Top" Width="150" Stroke="#FFDCE5E8" RenderTransformOrigin="0,0"/>
                        <Ellipse Fill="#FF02A2EC" HorizontalAlignment="Left" Height="10" Margin="190,92,0,0" VerticalAlignment="Top" Width="10"/>
                        <Ellipse Fill="White" HorizontalAlignment="Left" Height="50" Margin="129,121,0,0" VerticalAlignment="Top" Width="50" Stroke="#FFDCE5E8" RenderTransformOrigin="0,0"/>
                    </Grid>
                    <Button Content="A" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="B" HorizontalAlignment="Left" Margin="55,10,0,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="D" HorizontalAlignment="Left" Margin="10,55,0,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="C" HorizontalAlignment="Left" Margin="100,10,0,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="F" HorizontalAlignment="Left" Margin="10,100,0,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="E" HorizontalAlignment="Left" Margin="55,55,0,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="G" HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="H" HorizontalAlignment="Right" Margin="0,10,55,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="I" HorizontalAlignment="Right" Margin="0,10,100,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="J" HorizontalAlignment="Right" Margin="0,55,10,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="K" HorizontalAlignment="Right" Margin="0,55,55,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="L" HorizontalAlignment="Right" Margin="0,105,10,0" VerticalAlignment="Top" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="M" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="N" HorizontalAlignment="Right" Margin="0,0,55,10" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="O" HorizontalAlignment="Right" Margin="0,0,100,10" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="P" HorizontalAlignment="Right" Margin="0,0,10,55" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="Q" HorizontalAlignment="Right" Margin="0,0,55,55" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="R" HorizontalAlignment="Right" Margin="0,0,10,100" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="S" HorizontalAlignment="Left" Margin="10,0,0,10" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="T" HorizontalAlignment="Left" Margin="55,0,0,10" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="U" HorizontalAlignment="Left" Margin="100,0,0,10" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="V" HorizontalAlignment="Left" Margin="10,0,0,55" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="W" HorizontalAlignment="Left" Margin="55,0,0,55" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                    <Button Content="X" HorizontalAlignment="Left" Margin="10,0,0,100" VerticalAlignment="Bottom" Width="40" Height="40" Style="{DynamicResource ManualCOntrolButton}" BorderBrush="#FFEAEDF0" Background="#FFF3F4F5" Foreground="#FF576A85"/>
                </Grid>
            </TabItem>
            <TabItem Header="Help" Background="#FF02A2EC" Margin="0,53,0,-53" Height="35" FontSize="11" Style="{DynamicResource helptab}">
                <Grid Background="White"/>
            </TabItem>
        </TabControl>
        <Grid HorizontalAlignment="Left" Height="90" Margin="-299,-242,0,0" VerticalAlignment="Top" Width="214" Background="#FF5DACD1"/>
        <Grid HorizontalAlignment="Left" Height="90" Margin="52,-242,0,0" VerticalAlignment="Top" Width="214" Background="#FF02A2EC"/>
        <Grid HorizontalAlignment="Left" Height="90" Margin="361,-242,0,0" VerticalAlignment="Top" Width="214" Background="#FF27A3DC"/>
        <Grid HorizontalAlignment="Left" Height="90" Margin="626,-242,-69,0" VerticalAlignment="Top" Width="214" Background="#FF46A8D4"/>
        <Grid x:Name="message" Visibility="Collapsed">
            <Grid Background="#4C000000">
                <Grid HorizontalAlignment="Center" Height="112" VerticalAlignment="Center" Width="557" Background="White" Margin="214,70,0,262">
                    <TextBlock x:Name="message_details" HorizontalAlignment="Left" Margin="24,67,0,0" TextWrapping="Wrap" Text="Connection to the Smart Cat is lost. " VerticalAlignment="Top" Foreground="#FF747E91"/>
                    <TextBlock x:Name="message_header" HorizontalAlignment="Left" Margin="22,26,0,0" TextWrapping="Wrap" Text="COMMUNICATION LOST" VerticalAlignment="Top" Foreground="#FF364764" FontSize="25" FontFamily="Segoe UI Semilight"/>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="header_Copy" Height="51" VerticalAlignment="Top" Opacity="1" MouseLeftButtonDown="Header_MouseLeftButtonDown">
            <Button BorderThickness="0" HorizontalAlignment="Left" Margin="730,0,0,0" VerticalAlignment="Top" Width="21" Height="20" Foreground="#FF839CAC" Background="#FFF3F8F9">
                <Grid Height="20" Width="21">
                    <TextBlock HorizontalAlignment="Left" Margin="7,-2,0,0" TextWrapping="Wrap" Text="_" VerticalAlignment="Top" Height="16" Width="7"/>
                </Grid>
            </Button>
            <Button BorderThickness="0" HorizontalAlignment="Left" Margin="752,0,0,0" VerticalAlignment="Top" Width="19" Height="20" Foreground="#FF839CAC" Background="#FFF3F8F9">
                <Grid Height="20" Width="21">
                    <TextBlock HorizontalAlignment="Left" Margin="6,-1,0,0" TextWrapping="Wrap" Text="x" VerticalAlignment="Top" Height="16" Width="7"/>
                </Grid>
            </Button>
        </Grid>
        <Grid x:Name="header" Height="51" VerticalAlignment="Top" Background="White" Opacity="1E-05" MouseLeftButtonDown="Header_MouseLeftButtonDown"/>

    </Grid>
</Window>
